name: Release

on:
  push:
    tags:
      - 'v*'
env:
  PROJECT_NAME: camp.d

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          # It is a must. To generate a changelog.
          # this operation is chap. It took less than one second.
          fetch-depth: 0

      - name: Set the release version
        shell: bash
        run: echo "RELEASE_VERSION=${GITHUB_REF:11}" >> $GITHUB_ENV

      - name: Show release version
        shell: bash
        run: |
          echo ${{ env.RELEASE_VERSION }}

      - name: Extract repository information
        shell: bash
        run: |
          echo "PROJECT_NAME=${{ env.PROJECT_NAME }}" >> $GITHUB_ENV

      - name: Create tarball
        id: package
        run: |
          PKG_suffix=".tar.gz"
          PKG_BASENAME=${PROJECT_NAME}-${RELEASE_VERSION}
          PKG_NAME=${PKG_BASENAME}${PKG_suffix}
          echo "PKG_NAME=${PKG_NAME}" >> $GITHUB_OUTPUT

          PKG_STAGING="/tmp/package"
          ARCHIVE_DIR="${PKG_STAGING}/${PKG_BASENAME}/"
          mkdir -p "${ARCHIVE_DIR}"

          # Source
          cp -r "core" "lisp" "modules" "config.el" "early-init.el" "init.el" "emacs-version" "version" "$ARCHIVE_DIR"
          # README, LICENSE and CHANGELOG files
          cp "README.md" "LICENSE" "CHANGELOG.md" "$ARCHIVE_DIR"

          # Compress
          pushd "${PKG_STAGING}/" >/dev/null
          tar czf "${PKG_NAME}" "${PKG_BASENAME}"/
          popd >/dev/null

          # Let subsequent steps know where to find the compressed package
          echo "PKG_PATH=${PKG_STAGING}/${PKG_NAME}" >> $GITHUB_OUTPUT

      - name: Generate a changelog
        uses: orhun/git-cliff-action@v2
        id: git-cliff
        with:
          config: configs/cliff.toml
          args: -vv --strip header --current
        env:
          OUTPUT: CHANGELOG.md.tmp

      - name: Print the changelog
        run: cat "${{ steps.git-cliff.outputs.changelog }}"

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GH_TOKEN }}
          name: "v${{ env.RELEASE_VERSION }}"
          files: ${{ steps.package.outputs.PKG_NAME }}
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
          generate_release_notes: true
          body_path: "${{ steps.git-cliff.outputs.changelog }}"
